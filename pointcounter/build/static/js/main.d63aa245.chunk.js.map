{"version":3,"sources":["fbase.js","components/Nav.js","route/PutWin.js","components/Modal/Portal.js","components/Modal/index.js","route/WinRatio.js","route/CheckPoint.js","route/CheckLog.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firedb","firestore","dbService","StyledNav","styled","ul","Nav","state","id","to","className","StyledResultBox","div","StyledPlayerBox","props","name","StyeldResultBtn","button","StyledInput","input","StyledNavUl","StyledNavLi","li","ANSWER","Date","valueOf","Putwin","totalLog","logs","date","setYear","setMonth","year","getFullYear","month","getMonth","useState","playerList","setPlayerList","newPlayer","setNewPlayer","winner","winPoint","loser","losePoint","results","setResults","console","log","useEffect","filter","el","players","i","indexOf","winner1","push","winner2","loser1","loser2","sort","onSubmit","a","logTime","logDate","String","getDate","length","logHour","getHours","logMinute","getMinutes","thisGame","timeStamp","winner1_point","Number","winner2_point","loser1_point","loser2_point","collection","add","map","result","idx","value","onChange","e","tmpResults","target","player","newResults","tmpResult","onClick","checkSum","lastCheck","window","confirm","answer","prompt","then","alert","catch","error","style","margin","marginLeft","padding","height","ModalPortal","children","document","getElementById","reactDom","createPortal","Modal","isOpened","closeModal","ModalContainer","Dim","Contents","WinRatio","isOpen","user","modalOpen","setModalOpen","checkPlayers","tmpRatio","win","lose","b","aRatio","position","maxHeight","overflow","width","display","justifyContent","boxSizing","Math","round","border","background","cursor","isOpene","StyledLayer","color","Checkpoint","playerPoint","point","join","heaven","kingdom","noble","normal","slave","deepSea","StyledLogUl","StyledTimeDiv","StyledPlayerDiv","StyledBtnSec","section","CheckLog","optionList","selectVal","setSelectVal","split","option","slice","doc","delete","xmlns","viewBox","d","AppRoute","basename","exact","path","from","StyledContainer","StyledBtn","App","setLogs","onSnapshot","snapshot","logArr","docs","data","randomBg","useMemo","floor","random","setDisplay","backgroundSize","backgroundPosition","prev","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d63aa245.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\n// import 'firebase/auth';\nimport \"firebase/firestore\";\n// import 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGEIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst firedb = firebase.firestore();\n\nexport const firebaseInstance = firebase;\n// export const authService = firebase.auth();\nexport const dbService = firedb;\n// export const storageService = firebase.storage();\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\nconst StyledNav = styled.ul`\nlist-style:none;\ntext-align:center;\npadding :10px 0;\nli{\n  display:inline-block;\n  width:calc((100% - 80px)/4);\n  height:40px;\n  margin-left:15px;\n  a{\n    display:block;\n    width:100%;\n    height:100%;\n    box-sizing:border-box;\n    line-height:40px;\n    color:black;\n    text-decoration:none;\n  }\n  a:hover{\n    border-bottom: 3px solid green;\n  } \n  a.on{\n    border-bottom: 3px solid green;\n  }\n}\nli:first-child{\n  margin:0;\n}\n`;\n\nconst Nav = ({state})=>{\n  return(\n    <StyledNav>\n      <li><Link id=\"input-win\" to=\"/input-win\" className={state===\"putWin\"? \"putWin on\":\"putWin\"}>승패입력</Link></li>\n      <li><Link id=\"win-ratio\" to=\"/win-ratio\"  className={state===\"winRatio\"? \"winRatio on\":\"winRatio\"} >승률</Link></li>\n      <li><Link id=\"check-point\" to=\"/check-point\" className={state===\"checkPoint\"? \"checkPoint on\":\"checkPoint\"}>포인트</Link></li>\n      <li><Link id=\"input-win\" to=\"/view-log\" className={state===\"viewlog\"? \"viewlog on\":\"viewlog\"}>로그</Link></li>\n    </StyledNav>\n    )\n}\n\nexport default Nav;","import { useState, useEffect } from \"react\";\nimport { dbService } from \"../fbase\";\nimport styled from \"styled-components\";\nimport Nav from \"../components/Nav\";\nconst StyledResultBox = styled.div`\n  text-align: center;\n  margin-top: 20px;\n`;\nconst StyledPlayerBox = styled.div`\n  display: inline-block;\n  margin-right: ${(props) => (props.name === \"winner\" ? \"20px;\" : \"0;\")} select {\n    margin-right: 15px;\n    height: 23px;\n  }\n  @media (max-width: 768px) {\n    width: calc((80% - 20px) / 2);\n    select {\n      width: 80px;\n    }\n  }\n  @media (max-width: 368px) {\n    select {\n      width: 50px;\n      font-size: 10px;\n    }\n  }\n`;\nconst StyeldResultBtn = styled.button`\n  width: 380px;\n  height: 50px;\n  margin-top: 20px;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst StyledInput = styled.input`\n  width: ${(props) => (props.name === \"player\" ? \"200px\" : \"100px\")};\n  height: 24px;\n  text-align: right;\n  box-sizing: border-box;\n  padding: 2px;\n  border: 0;\n  border-bottom: 1px solid #aaa;\n  @media (max-width: 768px) {\n    width: ${(props) => (props.name === \"player\" ? \"33%\" : \"20%\")};\n  }\n`;\nconst StyledNavUl = styled.ul`\n  text-align: center;\n  list-style: none;\n  font-size: 28px;\n  margin-top: 20px;\n`;\nconst StyledNavLi = styled.li`\n  margin-right: ${(props) => (props.name === \"winner\" ? \"20px\" : \"0\")};\n  display: inline-block;\n  width: 200px;\n  @media (max-width: 768px) {\n    width: calc((80% - 20px) / 2);\n  }\n`;\n\nconst ANSWER = new Date().valueOf() > 1704585600000 ? \"티라\" : \"태진\";\nconst Putwin = ({ logs: totalLog, date, setYear, setMonth }) => {\n  const year = new Date().getFullYear();\n  const month = new Date().getMonth() + 1;\n\n  const [playerList, setPlayerList] = useState([]);\n  const [newPlayer, setNewPlayer] = useState(\"\");\n  const [results, setResults] = useState([\n    {\n      winner: \"0\",\n      winPoint: \"1\",\n      loser: \"0\",\n      losePoint: \"1\",\n    },\n    {\n      winner: \"0\",\n      winPoint: \"1\",\n      loser: \"0\",\n      losePoint: \"1\",\n    },\n  ]);\n  console.log(date, year, month);\n  useEffect(() => {\n    if (date.month !== month || date.year !== year) {\n      setMonth(month);\n      setYear(year);\n    }\n  }, [setMonth, setYear, year, month, date]);\n  useEffect(() => {\n    const logs = totalLog.filter(\n      (el) => el.year === date.year && el.month === date.month\n    );\n    const players = [];\n    for (let i in logs) {\n      if (players.indexOf(logs[i].winner1) === -1) {\n        players.push(logs[i].winner1);\n      }\n      if (players.indexOf(logs[i].winner2) === -1) {\n        players.push(logs[i].winner2);\n      }\n      if (players.indexOf(logs[i].loser1) === -1) {\n        players.push(logs[i].loser1);\n      }\n      if (players.indexOf(logs[i].loser2) === -1) {\n        players.push(logs[i].loser2);\n      }\n    }\n    players.sort();\n    if (players.indexOf(\"티라미드\") === -1) players.push(\"티라미드\");\n    setPlayerList(players);\n  }, [totalLog, date]);\n  const onClick = () => {\n    if (\n      window.confirm(\n        `이름이 ${newPlayer}이(가) 맞습니까? 한번 추가하면 제거할수 없습니다.`\n      ) &&\n      playerList.indexOf(newPlayer) === -1\n    ) {\n      setPlayerList(() => {\n        let players = [...playerList, newPlayer];\n        players.sort();\n        return players;\n      });\n    } else if (playerList.indexOf(newPlayer) !== -1) {\n      alert(\"중복된 이름이 있습니다.\");\n    }\n  };\n\n  const onSubmit = async (results) => {\n    const logTime = new Date();\n    const logDate =\n      String(logTime.getDate()).length === 1\n        ? \"0\" + String(logTime.getDate())\n        : String(logTime.getDate());\n    const logHour =\n      String(logTime.getHours()).length === 1\n        ? \"0\" + String(logTime.getHours())\n        : String(logTime.getHours());\n    const logMinute =\n      String(logTime.getMinutes()).length === 1\n        ? \"0\" + String(logTime.getMinutes())\n        : String(logTime.getMinutes());\n    const thisGame = {\n      timeStamp: logDate + logHour + logMinute,\n      winner1: playerList[results[0].winner],\n      winner1_point: Number(results[0].winPoint),\n      winner2: playerList[results[1].winner],\n      winner2_point: Number(results[1].winPoint),\n      loser1: playerList[results[0].loser],\n      loser1_point: Number(results[0].losePoint),\n      loser2: playerList[results[1].loser],\n      loser2_point: Number(results[1].losePoint),\n      month: date.month,\n      year: date.year,\n    };\n    // console.log(thisGame);\n    await dbService.collection(`playLog`).add(thisGame);\n  };\n  return (\n    <>\n      <Nav state=\"putWin\" />\n      <StyledNavUl>\n        <StyledNavLi name=\"winner\">승리</StyledNavLi>\n        <StyledNavLi name=\"loser\">패배</StyledNavLi>\n      </StyledNavUl>\n      {results.map((result, idx) => (\n        <StyledResultBox key={idx}>\n          <StyledPlayerBox name=\"winner\" className=\"winner\">\n            <select\n              value={results[idx].winner}\n              onChange={(e) => {\n                const tmpResults = [...results];\n                tmpResults[idx].winner = e.target.value;\n                setResults(tmpResults);\n              }}\n            >\n              {playerList.map((player, idx) => (\n                <option key={idx} value={idx}>\n                  {player}\n                </option>\n              ))}\n            </select>\n            <select\n              value={results[idx].winPoint}\n              onChange={(e) => {\n                const newResults = [...results];\n                newResults[idx].winPoint = String(Number(e.target.value));\n                setResults(newResults);\n              }}\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n            </select>\n          </StyledPlayerBox>\n          <StyledPlayerBox name=\"loser\" className=\"loser\">\n            <select\n              value={results[idx].loser}\n              onChange={(e) => {\n                const tmpResult = [...results];\n                tmpResult[idx].loser = e.target.value;\n                setResults(tmpResult);\n              }}\n            >\n              {playerList.map((player, idx) => (\n                <option key={idx} value={idx}>\n                  {player}\n                </option>\n              ))}\n            </select>\n            <select\n              value={results[idx].losePoint}\n              onChange={(e) => {\n                const newResults = [...results];\n                newResults[idx].losePoint = String(Number(e.target.value));\n                setResults(newResults);\n              }}\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n            </select>\n          </StyledPlayerBox>\n        </StyledResultBox>\n      ))}\n      <StyeldResultBtn\n        onClick={() => {\n          let checkSum = 0;\n          for (let i in results) {\n            checkSum +=\n              Number(results[i].winPoint) - Number(results[i].losePoint);\n          }\n          const lastCheck = window.confirm(\n            `승 : ${playerList[results[0].winner]}(${results[0].winPoint}), ${\n              playerList[results[1].winner]\n            }(${results[1].winPoint}) 패: ${playerList[results[0].loser]}(${\n              results[0].losePoint\n            }), ${playerList[results[1].loser]}(${\n              results[1].losePoint\n            }) 이(가) 맞나요?`\n          );\n          const answer = lastCheck\n            ? prompt(\"티라미드 승패 입력을 위한 비밀암호\")\n            : null;\n          if (checkSum === 0 && answer === ANSWER) {\n            onSubmit(results)\n              .then(() => {\n                alert(\"입력완료!\");\n                const tmpResults = [...results];\n                setResults([\n                  {\n                    winner: tmpResults[0].winner,\n                    winPoint: tmpResults[0].winPoint,\n                    loser: tmpResults[0].loser,\n                    losePoint: tmpResults[0].losePoint,\n                  },\n                  {\n                    winner: tmpResults[1].winner,\n                    winPoint: tmpResults[1].winPoint,\n                    loser: tmpResults[1].loser,\n                    losePoint: tmpResults[1].losePoint,\n                  },\n                ]);\n              })\n              .catch((error) => console.error(\"Error:\", error));\n          } else if (checkSum !== 0) {\n            alert(\"합계가 맞지 않습니다!\");\n          } else if (lastCheck && answer !== ANSWER) {\n            alert(\"암호를 당장 알아오세요!\");\n          }\n        }}\n      >\n        결과 입력하기\n      </StyeldResultBtn>\n      <div style={{ margin: \"20px 0\" }}>\n        <StyledInput\n          name=\"player\"\n          value={newPlayer}\n          onChange={(e) => setNewPlayer(e.target.value)}\n        />\n        <button\n          style={{ marginLeft: \"20px\", padding: \"3px\", height: \"24px\" }}\n          onClick={onClick}\n        >\n          플레이어 추가\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Putwin;\n","import reactDom from \"react-dom\";\n\nconst ModalPortal = ({ children }) => {\n  const el = document.getElementById(\"modal\");\n  return reactDom.createPortal(children, el);\n};\n\nexport default ModalPortal;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ModalPortal from \"./Portal\";\n\nconst Modal = ({ isOpened = false, closeModal, children }) => {\n  return (\n    <ModalPortal>\n      {isOpened && (\n        <ModalContainer>\n          <Dim onClick={closeModal} />\n          <Contents>{children}</Contents>\n        </ModalContainer>\n      )}\n    </ModalPortal>\n  );\n};\n\nexport default Modal;\nconst ModalContainer = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 100;\n  width: 100%;\n  height: 100vh;\n`;\nconst Dim = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.3);\n`;\nconst Contents = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: white;\n`;\n","import { useState } from \"react\";\nimport Modal from \"../components/Modal\";\nimport Nav from \"../components/Nav\";\n\nconst WinRatio = ({ logs: totalLog, date }) => {\n  const logs = totalLog.filter(\n    (el) => el.year === date.year && el.month === date.month\n  );\n  const [modalOpen, setModalOpen] = useState({ isOpen: false, user: null });\n  const checkPlayers = (() => {\n    let players = [];\n    let tmpRatio = [];\n    for (let i in logs) {\n      if (\n        logs[i].loser1 !== \"티라미드\" &&\n        players.indexOf(logs[i].winner1) === -1\n      ) {\n        players.push(logs[i].winner1);\n        tmpRatio.push({\n          name: logs[i].winner1,\n          win: 1,\n          lose: 0,\n        });\n      } else if (logs[i].loser1 !== \"티라미드\") {\n        tmpRatio[players.indexOf(logs[i].winner1)].win++;\n      }\n      if (\n        logs[i].loser2 !== \"티라미드\" &&\n        players.indexOf(logs[i].winner2) === -1\n      ) {\n        players.push(logs[i].winner2);\n        tmpRatio.push({\n          name: logs[i].winner2,\n          win: 1,\n          lose: 0,\n        });\n      } else if (logs[i].loser2 !== \"티라미드\") {\n        tmpRatio[players.indexOf(logs[i].winner2)].win++;\n      }\n      if (players.indexOf(logs[i].loser1) === -1) {\n        players.push(logs[i].loser1);\n        tmpRatio.push({\n          name: logs[i].loser1,\n          win: 0,\n          lose: 1,\n        });\n      } else if (logs[i].winner1 !== \"티라미드\") {\n        tmpRatio[players.indexOf(logs[i].loser1)].lose++;\n      }\n      if (players.indexOf(logs[i].loser2) === -1) {\n        players.push(logs[i].loser2);\n        tmpRatio.push({\n          name: logs[i].loser2,\n          win: 0,\n          lose: 1,\n        });\n      } else if (logs[i].winner2 !== \"티라미드\") {\n        tmpRatio[players.indexOf(logs[i].loser2)].lose++;\n      }\n    }\n    return tmpRatio;\n  })();\n  console.log(checkPlayers);\n  checkPlayers.sort((a, b) => {\n    const aRatio = a.win / (a.win + a.lose);\n    const bRatio = b.win / (b.win + b.lose);\n    return bRatio - aRatio;\n  });\n  const showUserLank = (user) => {\n    setModalOpen({ isOpen: true, user });\n  };\n  false && showUserLank();\n  return (\n    <>\n      <Nav state=\"winRatio\" />\n      <div\n        style={{\n          margin: \"20px 0 30px\",\n          position: \"relative\",\n          maxHeight: \"450px\",\n          overflow: \"scroll\",\n        }}\n      >\n        {checkPlayers.map((player, idx) => (\n          <div\n            key={idx}\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"8px 28px\",\n              boxSizing: \"border-box\",\n            }}\n          >\n            <span>\n              {idx + 1}위 {player.name} 승률 :{\" \"}\n              {Math.round((player.win / (player.win + player.lose)) * 10000) /\n                100}{\" \"}\n              % , win : {player.win}, lose : {player.lose}\n            </span>\n            <button\n              style={{\n                padding: \"5px 8px\",\n                border: 0,\n                background: \"rgba(9,115,104,0.3)\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => alert(\"아직 구현이 되지 않았습니다.\")}\n              // onClick={() => showUserLank(player)}\n            >\n              티어 확인\n            </button>\n          </div>\n        ))}\n      </div>\n      <Modal\n        isOpene={modalOpen.isOpen}\n        closeModal={() => setModalOpen({ isOpen: false })}\n      ></Modal>\n    </>\n  );\n};\n\nexport default WinRatio;\n","import styled from \"styled-components\";\nimport Nav from \"../components/Nav\";\n\nconst StyledLayer = styled.ul`\n  list-style: none;\n  margin: 0 40px;\n  padding: 10px 40px;\n  background: ${(props) => props.color};\n  li {\n    text-align: left;\n    font-size: 13px;\n    margin: 4px;\n  }\n`;\n\nconst Checkpoint = ({ logs: totalLog, date }) => {\n  const logs = totalLog.filter(\n    (el) => el.year === date.year && el.month === date.month\n  );\n  const players = [];\n  const playerPoint = [];\n  let error = [];\n  for (let i in logs) {\n    let point = 0;\n    if (players.indexOf(logs[i].winner1) === -1) {\n      players.push(logs[i].winner1);\n      playerPoint.push({\n        name: logs[i].winner1,\n        point: logs[i].winner1_point,\n      });\n    } else {\n      playerPoint[players.indexOf(logs[i].winner1)].point +=\n        logs[i].winner1_point;\n    }\n    point += logs[i].winner1_point;\n    if (players.indexOf(logs[i].winner2) === -1) {\n      players.push(logs[i].winner2);\n      playerPoint.push({\n        name: logs[i].winner2,\n        point: logs[i].winner2_point,\n      });\n    } else {\n      playerPoint[players.indexOf(logs[i].winner2)].point +=\n        logs[i].winner2_point;\n    }\n    point += logs[i].winner2_point;\n    if (players.indexOf(logs[i].loser1) === -1) {\n      players.push(logs[i].loser1);\n      playerPoint.push({\n        name: logs[i].loser1,\n        point: 0 - logs[i].loser1_point,\n      });\n    } else {\n      playerPoint[players.indexOf(logs[i].loser1)].point -=\n        logs[i].loser1_point;\n    }\n    point -= logs[i].loser1_point;\n    if (players.indexOf(logs[i].loser2) === -1) {\n      players.push(logs[i].loser2);\n      playerPoint.push({\n        name: logs[i].loser2,\n        point: 0 - logs[i].loser2_point,\n      });\n    } else {\n      playerPoint[players.indexOf(logs[i].loser2)].point -=\n        logs[i].loser2_point;\n    }\n    point -= logs[i].loser2_point;\n    if (point !== 0) {\n      error.push(logs.timeStamp);\n    }\n  }\n  if (error.length !== 0) {\n    alert(`${error.join()}의 포인트가 맞지 않습니다. 확인해주세요.`);\n  }\n  const heaven = playerPoint\n    .filter((player) => player.point > 10)\n    .sort((a, b) => b.point - a.point);\n  const kingdom = playerPoint\n    .filter((player) => 11 > player.point && player.point > 7)\n    .sort((a, b) => b.point - a.point);\n  const noble = playerPoint\n    .filter((player) => 8 > player.point && player.point > 3)\n    .sort((a, b) => b.point - a.point);\n  const normal = playerPoint\n    .filter((player) => 4 > player.point && player.point > -1)\n    .sort((a, b) => b.point - a.point);\n  const slave = playerPoint\n    .filter((player) => 0 > player.point && player.point > -11)\n    .sort((a, b) => b.point - a.point);\n  const deepSea = playerPoint\n    .filter((player) => -10 > player.point && player.point)\n    .sort((a, b) => b.point - a.point);\n  return (\n    <>\n      <Nav state=\"checkPoint\" />\n      <div\n        className=\"test\"\n        style={{\n          margin: \"10px auto 30px\",\n          maxHeight: \"450px\",\n          overflow: \"scroll\",\n        }}\n      >\n        <StyledLayer color=\"rgba(242,184,7,0.3)\">\n          <li> - 천계 ( 11 ~ )</li>\n          {heaven.map((player, idx) => (\n            <li key={idx}>\n              {player.name} {player.point} point\n            </li>\n          ))}\n        </StyledLayer>\n        <StyledLayer color=\"rgba(9,115,104,0.3)\">\n          <li> - 왕족 ( 8 ~ 10 )</li>\n          {kingdom.map((player, idx) => (\n            <li key={idx}>\n              {player.name} {player.point} point\n            </li>\n          ))}\n        </StyledLayer>\n        <StyledLayer color=\"rgba(242,207,184,0.3)\">\n          <li> - 귀족 ( 4 ~ 7 )</li>\n          {noble.map((player, idx) => (\n            <li key={idx}>\n              {player.name} {player.point} point\n            </li>\n          ))}\n        </StyledLayer>\n        <StyledLayer color=\"rgba(217,79,48,0.3)\">\n          <li> - 평민 ( 0 ~ 3 )</li>\n          {normal.map((player, idx) => (\n            <li key={idx}>\n              {player.name} {player.point} point\n            </li>\n          ))}\n        </StyledLayer>\n        <StyledLayer color=\"rgba(242,153,169,0.3)\">\n          <li> - 노예 ( -1 ~ -10 )</li>\n          {slave.map((player, idx) => (\n            <li key={idx}>\n              {player.name} {player.point} point\n            </li>\n          ))}\n        </StyledLayer>\n        <StyledLayer color=\"rgba(5,20,125,0.3)\">\n          <li> - 심해 ( -11 ~ )</li>\n          {deepSea.map((player, idx) => (\n            <li key={idx}>\n              {player.name} {player.point} point\n            </li>\n          ))}\n        </StyledLayer>\n      </div>\n    </>\n  );\n};\n\nexport default Checkpoint;\n","import Nav from \"../components/Nav\";\nimport { dbService } from \"../fbase\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nconst StyledLogUl = styled.ul`\n  margin: 10px auto;\n  list-style: none;\n  max-height: 450px;\n  overflow: scroll;\n  padding: 0;\n  li {\n    div {\n      display: inline-block;\n    }\n  }\n`;\nconst StyledTimeDiv = styled.div`\n  width: 50px;\n  height: 28px;\n  line-height: 28px;\n  font-size: 12px;\n`;\nconst StyledPlayerDiv = styled.div`\n  width: 50px;\n  font-size: 12px;\n\n  @media (max-width: 585px) {\n    font-size: 10px;\n  }\n  svg {\n    height: 13px;\n    cursor: pointer;\n  }\n`;\nconst StyledBtnSec = styled.section`\n  width: 300px;\n  padding-top: 20px;\n  text-align: right;\n  margin: 0 auto;\n`;\nconst CheckLog = ({ logs: totalLog, date, setYear, setMonth }) => {\n  const optionList = [];\n  totalLog.sort((a, b) => a.month - b.month).sort((a, b) => a.year - b.year);\n  for (let el of totalLog) {\n    if (\n      optionList[optionList.length - 1]?.month !== el.month ||\n      optionList[optionList.length - 1]?.year !== el.year\n    )\n      optionList.push({ month: el.month, year: el.year });\n  }\n  console.log(totalLog);\n  const logs = totalLog.filter((el) => {\n    return el.year === date.year && el.month === date.month;\n  });\n  const year = new Date().getFullYear();\n  const month = new Date().getMonth() + 1;\n  const [selectVal, setSelectVal] = useState(`${year}_${month}`);\n\n  return (\n    <>\n      <Nav state=\"viewlog\" />\n      <StyledBtnSec>\n        <select\n          value={selectVal}\n          onChange={(e) => {\n            const {\n              target: { value },\n            } = e;\n            const [year, month] = value.split(\"_\");\n            setYear(Number(year));\n            setMonth(Number(month));\n            setSelectVal(`${year}_${month}`);\n          }}\n        >\n          {optionList.map((option, idx) => {\n            return (\n              <option key={idx} value={`${option.year}_${option.month}`}>{`${\n                option.year\n              }/${(\"0\" + option.month).slice(-2)}`}</option>\n            );\n          })}\n        </select>\n      </StyledBtnSec>\n      <StyledLogUl>\n        <li>\n          <StyledTimeDiv>시간</StyledTimeDiv>\n          <StyledPlayerDiv>승리1</StyledPlayerDiv>\n          <StyledPlayerDiv>승리2</StyledPlayerDiv>\n          <StyledPlayerDiv>패배1</StyledPlayerDiv>\n          <StyledPlayerDiv>패배2</StyledPlayerDiv>\n          <StyledPlayerDiv>삭제</StyledPlayerDiv>\n        </li>\n        {logs &&\n          logs.map((log, idx) => (\n            <li key={idx}>\n              <StyledTimeDiv>{log.timeStamp}</StyledTimeDiv>\n              <StyledPlayerDiv>\n                {log.winner1}({log.winner1_point})\n              </StyledPlayerDiv>\n              <StyledPlayerDiv>\n                {log.winner2}({log.winner2_point})\n              </StyledPlayerDiv>\n              <StyledPlayerDiv>\n                {log.loser1}({log.loser1_point})\n              </StyledPlayerDiv>\n              <StyledPlayerDiv>\n                {log.loser2}({log.loser2_point})\n              </StyledPlayerDiv>\n              <StyledPlayerDiv\n                onClick={async () => {\n                  const confirm = window.confirm(\n                    `시간 ${log.timeStamp}의 삭제가 맞나요?`\n                  );\n                  const password =\n                    (confirm && prompt(\"티라미드 승패 삭제을 위한 비밀암호\")) ||\n                    null;\n                  if (password === \"티츄\") {\n                    await dbService.collection(`playLog`).doc(log.id).delete();\n                    alert(\"삭제 완료!\");\n                  } else if (confirm) {\n                    alert(\"암호를 당장 알아오세요!\");\n                  }\n                }}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 352 512\">\n                  <path d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\" />\n                </svg>\n              </StyledPlayerDiv>\n            </li>\n          ))}\n      </StyledLogUl>\n    </>\n  );\n};\n\nexport default CheckLog;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route,\n} from \"react-router-dom\";\nimport Putwin from \"../route/PutWin\";\nimport WinRatio from \"../route/WinRatio\";\nimport Checkpoint from \"../route/CheckPoint\";\nimport CheckLog from \"../route/CheckLog\";\n\nconst AppRoute = ({ logs, setYear, setMonth, date }) => {\n  console.log(date, logs);\n  return (\n    <Router basename=\"/tiramid/pointcounter/build\">\n      <Switch>\n        <Route exact path=\"/input-win\">\n          <Putwin\n            date={date}\n            logs={logs}\n            setYear={setYear}\n            setMonth={setMonth}\n          ></Putwin>\n        </Route>\n        <Route exact path=\"/win-ratio\">\n          <WinRatio date={date} logs={logs}></WinRatio>\n        </Route>\n        <Route exact path=\"/check-point\">\n          <Checkpoint date={date} logs={logs}></Checkpoint>\n        </Route>\n        <Route exact path=\"/view-log\">\n          <CheckLog\n            date={date}\n            logs={logs}\n            setYear={setYear}\n            setMonth={setMonth}\n          ></CheckLog>\n        </Route>\n        <Redirect from=\"*\" to=\"/input-win\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRoute;\n","import styled from \"styled-components\";\nimport AppRoute from \"./Router\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { dbService } from \"../fbase\";\nconst StyledContainer = styled.div`\n  display: ${(props) => (props.display === \"true\" ? \"block;\" : \"none;\")};\n  z-index: 100;\n  width: 500px;\n  position: absolute;\n  background: white;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  @media (max-width: 768px) {\n    width: calc(100% - 20px);\n    left: 10px;\n    transform: translate(0, -50%);\n  }\n`;\nconst StyledBtn = styled.button`\n  border: 0;\n  background: white;\n  position: absolute;\n  height: 20px;\n  top: 40px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 20px;\n  line-height: 0;\n  @media (max-width: 768px) {\n    top: 40px;\n  }\n`;\nfunction App() {\n  const [logs, setLogs] = useState([]);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  useEffect(() => {\n    dbService.collection(`playLog`).onSnapshot(async (snapshot) => {\n      const logArr = snapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n      await logArr.sort((a, b) => Number(b.timeStamp) - Number(a.timeStamp));\n      setLogs(logArr);\n    });\n  }, []);\n  const randomBg = useMemo(() => Math.floor(Math.random() * 39), []);\n  const [display, setDisplay] = useState(true);\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100vh\",\n        backgroundSize: \"cover\",\n        position: \"relative\",\n        backgroundPosition: \"center\",\n      }}\n      className={`img${randomBg}`}\n    >\n      <StyledContainer display={String(display)}>\n        <AppRoute\n          logs={logs}\n          date={{ year, month }}\n          setYear={setYear}\n          setMonth={setMonth}\n        ></AppRoute>\n      </StyledContainer>\n      <StyledBtn\n        onClick={() => {\n          setDisplay((prev) => !prev);\n        }}\n      >\n        {display ? \"배경 관람\" : \"입력 돌아가기\"}\n      </StyledBtn>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nconst appVersion = \"1.5\";\n\nconsole.log(\"tiramid Counter v\" + appVersion);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}