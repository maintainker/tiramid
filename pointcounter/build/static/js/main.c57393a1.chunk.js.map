{"version":3,"sources":["fbase.js","components/Nav.js","route/PutWin.js","route/WinRatio.js","route/CheckPoint.js","route/CheckLog.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firedb","firestore","dbService","StyledNav","styled","ul","Nav","state","id","to","className","StyledResultBox","div","StyledPlayerBox","props","name","StyeldResultBtn","button","StyledInput","input","StyledNavUl","StyledNavLi","li","Putwin","logs","year","Date","getFullYear","month","getMonth","useState","playerList","setPlayerList","newPlayer","setNewPlayer","winner","winPoint","loser","losePoint","results","setResults","useEffect","players","i","indexOf","winner1","push","winner2","loser1","loser2","sort","onSubmit","a","logTime","logDate","String","getDate","length","logHour","getHours","logMinute","getMinutes","thisGame","timeStamp","winner1_point","Number","winner2_point","loser1_point","loser2_point","collection","add","map","result","idx","value","onChange","e","tmpResults","target","player","newResults","tmpResult","onClick","checkSum","lastCheck","window","confirm","answer","prompt","then","alert","catch","error","console","style","margin","marginLeft","padding","height","WinRatio","checkPlayers","tmpRatio","win","lose","filter","b","aRatio","position","maxHeight","overflow","Math","round","bottom","right","fontSize","StyledLayer","color","Checkpoint","playerPoint","point","join","heaven","kingdom","noble","normal","slave","deepSea","StyledLogUl","StyledTimeDiv","StyledPlayerDiv","CheckLog","log","doc","delete","xmlns","viewBox","d","AppRoute","basename","exact","path","from","StyledContainer","display","StyledBtn","App","setLogs","onSnapshot","snapshot","logArr","docs","data","randomBg","useMemo","floor","random","setDisplay","width","backgroundSize","backgroundPosition","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c57393a1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\n// import 'firebase/auth';\nimport \"firebase/firestore\";\n// import 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGEIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst firedb = firebase.firestore();\n\nexport const firebaseInstance = firebase;\n// export const authService = firebase.auth();\nexport const dbService = firedb;\n// export const storageService = firebase.storage();\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\nconst StyledNav = styled.ul`\nlist-style:none;\ntext-align:center;\npadding :10px 0;\nli{\n  display:inline-block;\n  width:calc((100% - 80px)/4);\n  height:40px;\n  margin-left:15px;\n  a{\n    display:block;\n    width:100%;\n    height:100%;\n    box-sizing:border-box;\n    line-height:40px;\n    color:black;\n    text-decoration:none;\n  }\n  a:hover{\n    border-bottom: 3px solid green;\n  } \n  a.on{\n    border-bottom: 3px solid green;\n  }\n}\nli:first-child{\n  margin:0;\n}\n`;\n\nconst Nav = ({state})=>{\n  return(\n    <StyledNav>\n      <li><Link id=\"input-win\" to=\"/input-win\" className={state===\"putWin\"? \"putWin on\":\"putWin\"}>승패입력</Link></li>\n      <li><Link id=\"win-ratio\" to=\"/win-ratio\"  className={state===\"winRatio\"? \"winRatio on\":\"winRatio\"} >승률</Link></li>\n      <li><Link id=\"check-point\" to=\"/check-point\" className={state===\"checkPoint\"? \"checkPoint on\":\"checkPoint\"}>포인트</Link></li>\n      <li><Link id=\"input-win\" to=\"/view-log\" className={state===\"viewlog\"? \"viewlog on\":\"viewlog\"}>로그</Link></li>\n    </StyledNav>\n    )\n}\n\nexport default Nav;","import { useState, useEffect } from \"react\";\nimport { dbService } from \"../fbase\";\nimport styled from \"styled-components\";\nimport Nav from \"../components/Nav\";\nconst StyledResultBox = styled.div`\n  text-align: center;\n  margin-top: 20px;\n`;\nconst StyledPlayerBox = styled.div`\n  display: inline-block;\n  margin-right: ${(props) => (props.name === \"winner\" ? \"20px;\" : \"0;\")} select {\n    margin-right: 15px;\n    height: 23px;\n  }\n  @media (max-width: 768px) {\n    width: calc((80% - 20px) / 2);\n    select {\n      width: 80px;\n    }\n  }\n  @media (max-width: 368px) {\n    select {\n      width: 50px;\n      font-size: 10px;\n    }\n  }\n`;\nconst StyeldResultBtn = styled.button`\n  width: 380px;\n  height: 50px;\n  margin-top: 20px;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst StyledInput = styled.input`\n  width: ${(props) => (props.name === \"player\" ? \"200px\" : \"100px\")};\n  height: 24px;\n  text-align: right;\n  box-sizing: border-box;\n  padding: 2px;\n  border: 0;\n  border-bottom: 1px solid #aaa;\n  @media (max-width: 768px) {\n    width: ${(props) => (props.name === \"player\" ? \"33%\" : \"20%\")};\n  }\n`;\nconst StyledNavUl = styled.ul`\n  text-align: center;\n  list-style: none;\n  font-size: 28px;\n  margin-top: 20px;\n`;\nconst StyledNavLi = styled.li`\n  margin-right: ${(props) => (props.name === \"winner\" ? \"20px\" : \"0\")};\n  display: inline-block;\n  width: 200px;\n  @media (max-width: 768px) {\n    width: calc((80% - 20px) / 2);\n  }\n`;\nconst Putwin = ({ logs }) => {\n  const year = new Date().getFullYear();\n  const month = new Date().getMonth() + 1;\n  // const month = 11;\n  const [playerList, setPlayerList] = useState([]);\n  const [newPlayer, setNewPlayer] = useState(\"\");\n  const [results, setResults] = useState([\n    {\n      winner: \"0\",\n      winPoint: \"1\",\n      loser: \"0\",\n      losePoint: \"1\",\n    },\n    {\n      winner: \"0\",\n      winPoint: \"1\",\n      loser: \"0\",\n      losePoint: \"1\",\n    },\n  ]);\n  useEffect(() => {\n    let players = [];\n    for (let i in logs) {\n      if (players.indexOf(logs[i].winner1) === -1) {\n        players.push(logs[i].winner1);\n      }\n      if (players.indexOf(logs[i].winner2) === -1) {\n        players.push(logs[i].winner2);\n      }\n      if (players.indexOf(logs[i].loser1) === -1) {\n        players.push(logs[i].loser1);\n      }\n      if (players.indexOf(logs[i].loser2) === -1) {\n        players.push(logs[i].loser2);\n      }\n    }\n    players.sort();\n    if (players.indexOf(\"티라미드\") === -1) {\n      players.push(\"티라미드\");\n    }\n    setPlayerList(players);\n  }, [logs]);\n  const onClick = () => {\n    if (\n      window.confirm(\n        `이름이 ${newPlayer}이(가) 맞습니까? 한번 추가하면 제거할수 없습니다.`,\n      ) &&\n      playerList.indexOf(newPlayer) === -1\n    ) {\n      setPlayerList(() => {\n        let players = [...playerList, newPlayer];\n        players.sort();\n        return players;\n      });\n    } else if (playerList.indexOf(newPlayer) !== -1) {\n      alert(\"중복된 이름이 있습니다.\");\n    }\n  };\n\n  const onSubmit = async (results) => {\n    const logTime = new Date();\n    const logDate =\n      String(logTime.getDate()).length === 1\n        ? \"0\" + String(logTime.getDate())\n        : String(logTime.getDate());\n    const logHour =\n      String(logTime.getHours()).length === 1\n        ? \"0\" + String(logTime.getHours())\n        : String(logTime.getHours());\n    const logMinute =\n      String(logTime.getMinutes()).length === 1\n        ? \"0\" + String(logTime.getMinutes())\n        : String(logTime.getMinutes());\n    const thisGame = {\n      timeStamp: logDate + logHour + logMinute,\n      winner1: playerList[results[0].winner],\n      winner1_point: Number(results[0].winPoint),\n      winner2: playerList[results[1].winner],\n      winner2_point: Number(results[1].winPoint),\n      loser1: playerList[results[0].loser],\n      loser1_point: Number(results[0].losePoint),\n      loser2: playerList[results[1].loser],\n      loser2_point: Number(results[1].losePoint),\n    };\n    await dbService.collection(`playerList${year}${month}`).add(thisGame);\n  };\n  return (\n    <>\n      <Nav state=\"putWin\" />\n      <StyledNavUl>\n        <StyledNavLi name=\"winner\">승리</StyledNavLi>\n        <StyledNavLi name=\"loser\">패배</StyledNavLi>\n      </StyledNavUl>\n      {results.map((result, idx) => (\n        <StyledResultBox key={idx}>\n          <StyledPlayerBox name=\"winner\" className=\"winner\">\n            <select\n              value={results[idx].winner}\n              onChange={(e) => {\n                const tmpResults = [...results];\n                tmpResults[idx].winner = e.target.value;\n                setResults(tmpResults);\n              }}\n            >\n              {playerList.map((player, idx) => (\n                <option key={idx} value={idx}>\n                  {player}\n                </option>\n              ))}\n            </select>\n            <select\n              value={results[idx].winPoint}\n              onChange={(e) => {\n                const newResults = [...results];\n                newResults[idx].winPoint = String(Number(e.target.value));\n                setResults(newResults);\n              }}\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n            </select>\n          </StyledPlayerBox>\n          <StyledPlayerBox name=\"loser\" className=\"loser\">\n            <select\n              value={results[idx].loser}\n              onChange={(e) => {\n                const tmpResult = [...results];\n                tmpResult[idx].loser = e.target.value;\n                setResults(tmpResult);\n              }}\n            >\n              {playerList.map((player, idx) => (\n                <option key={idx} value={idx}>\n                  {player}\n                </option>\n              ))}\n            </select>\n            <select\n              value={results[idx].losePoint}\n              onChange={(e) => {\n                const newResults = [...results];\n                newResults[idx].losePoint = String(Number(e.target.value));\n                setResults(newResults);\n              }}\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n            </select>\n          </StyledPlayerBox>\n        </StyledResultBox>\n      ))}\n      <StyeldResultBtn\n        onClick={() => {\n          let checkSum = 0;\n          for (let i in results) {\n            checkSum +=\n              Number(results[i].winPoint) - Number(results[i].losePoint);\n          }\n          const lastCheck = window.confirm(\n            `승 : ${playerList[results[0].winner]}(${results[0].winPoint}), ${\n              playerList[results[1].winner]\n            }(${results[1].winPoint}) 패: ${playerList[results[0].loser]}(${\n              results[0].losePoint\n            }), ${playerList[results[1].loser]}(${\n              results[1].losePoint\n            }) 이(가) 맞나요?`,\n          );\n          const answer = lastCheck\n            ? prompt(\"티라미드 승패 입력을 위한 비밀암호\")\n            : null;\n          // const answer = \"태진\";\n          if (checkSum === 0 && answer === \"태진\") {\n            onSubmit(results)\n              .then(() => {\n                alert(\"입력완료!\");\n                const tmpResults = [...results];\n                setResults([\n                  {\n                    winner: tmpResults[0].winner,\n                    winPoint: tmpResults[0].winPoint,\n                    loser: tmpResults[0].loser,\n                    losePoint: tmpResults[0].losePoint,\n                  },\n                  {\n                    winner: tmpResults[1].winner,\n                    winPoint: tmpResults[1].winPoint,\n                    loser: tmpResults[1].loser,\n                    losePoint: tmpResults[1].losePoint,\n                  },\n                ]);\n              })\n              .catch((error) => console.error(\"Error:\", error));\n          } else if (checkSum !== 0) {\n            alert(\"합계가 맞지 않습니다!\");\n          } else if (lastCheck && answer !== \"태진\") {\n            alert(\"암호를 당장 알아오세요!\");\n          }\n        }}\n      >\n        결과 입력하기\n      </StyeldResultBtn>\n      <div style={{ margin: \"20px 0\" }}>\n        <StyledInput\n          name=\"player\"\n          value={newPlayer}\n          onChange={(e) => setNewPlayer(e.target.value)}\n        />\n        <button\n          style={{ marginLeft: \"20px\", padding: \"3px\", height: \"24px\" }}\n          onClick={onClick}\n        >\n          플레이어 추가\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Putwin;\n","import Nav from \"../components/Nav\";\n\nconst WinRatio = ({ logs }) => {\n  const ratio = (() => {\n    let players = [];\n    let tmpRatio = [];\n    for (let i in logs) {\n      if (\n        logs[i].loser1 !== \"티라미드\" &&\n        players.indexOf(logs[i].winner1) === -1\n      ) {\n        players.push(logs[i].winner1);\n        tmpRatio.push({\n          name: logs[i].winner1,\n          win: 1,\n          lose: 0,\n        });\n      } else if (logs[i].loser1 !== \"티라미드\") {\n        tmpRatio[players.indexOf(logs[i].winner1)].win++;\n      }\n      if (\n        logs[i].loser2 !== \"티라미드\" &&\n        players.indexOf(logs[i].winner2) === -1\n      ) {\n        players.push(logs[i].winner2);\n        tmpRatio.push({\n          name: logs[i].winner2,\n          win: 1,\n          lose: 0,\n        });\n      } else if (logs[i].loser2 !== \"티라미드\") {\n        tmpRatio[players.indexOf(logs[i].winner2)].win++;\n      }\n      if (players.indexOf(logs[i].loser1) === -1) {\n        players.push(logs[i].loser1);\n        tmpRatio.push({\n          name: logs[i].loser1,\n          win: 0,\n          lose: 1,\n        });\n      } else if (logs[i].winner1 !== \"티라미드\") {\n        tmpRatio[players.indexOf(logs[i].loser1)].lose++;\n      }\n      if (players.indexOf(logs[i].loser2) === -1) {\n        players.push(logs[i].loser2);\n        tmpRatio.push({\n          name: logs[i].loser2,\n          win: 0,\n          lose: 1,\n        });\n      } else if (logs[i].winner2 !== \"티라미드\") {\n        tmpRatio[players.indexOf(logs[i].loser2)].lose++;\n      }\n    }\n    return tmpRatio;\n  })();\n  const checkPlayers = ratio.filter((player) => {\n    if (player.name === \"티라미드\" || player.win + player.lose < 5) {\n      return false;\n    } else {\n      return true;\n    }\n  });\n  checkPlayers.sort((a, b) => {\n    const aRatio = a.win / (a.win + a.lose);\n    const bRatio = b.win / (b.win + b.lose);\n    return bRatio - aRatio;\n  });\n  return (\n    <>\n      <Nav state=\"winRatio\" />\n      <div\n        style={{\n          margin: \"20px 0 30px\",\n          position: \"relative\",\n          maxHeight: \"450px\",\n          overflow: \"scroll\",\n        }}\n      >\n        {checkPlayers.map((player, idx) => (\n          <div key={idx} style={{ padding: \"8px\" }}>\n            <span>\n              {idx + 1}위 {player.name} 승률 :{\" \"}\n              {Math.round((player.win / (player.win + player.lose)) * 10000) /\n                100}{\" \"}\n              % , win : {player.win}, lose : {player.lose}\n            </span>\n          </div>\n        ))}\n      </div>\n      <span\n        style={{\n          position: \"absolute\",\n          bottom: \"3px\",\n          right: \"0\",\n          fontSize: \"5px\",\n        }}\n      >\n        * 합계 5판 이상만 집계됩니다. player에 이름이 있지만 여기에 이름이\n        없다면 경기수가 5판이 되지 않습니다.\n      </span>\n    </>\n  );\n};\n\nexport default WinRatio;\n","import styled from 'styled-components';\nimport Nav from '../components/Nav';\n\nconst StyledLayer = styled.ul`\n  list-style:none;\n  margin :0 40px;\n  padding:10px 40px;\n  background:${props=>props.color};\n  li{\n    text-align:left;\n    font-size :13px;\n    margin:4px;\n  }\n`;\n\nconst Checkpoint = ({logs}) =>{\n  const players = [];\n  const playerPoint = [];\n  let error = [];\n  for(let i in logs){\n    let point = 0;\n    if(players.indexOf(logs[i].winner1)===-1){\n      players.push(logs[i].winner1);\n      playerPoint.push({\n        name:logs[i].winner1,\n        point: logs[i].winner1_point\n      })\n    }else{\n      playerPoint[players.indexOf(logs[i].winner1)].point += logs[i].winner1_point;\n    }\n    point += logs[i].winner1_point;\n    if(players.indexOf(logs[i].winner2)===-1){\n      players.push(logs[i].winner2);\n      playerPoint.push({\n        name:logs[i].winner2,\n        point: logs[i].winner2_point\n      })\n    }else{\n      playerPoint[players.indexOf(logs[i].winner2)].point += logs[i].winner2_point;\n    }\n    point += logs[i].winner2_point;\n    if(players.indexOf(logs[i].loser1)===-1){\n      players.push(logs[i].loser1);\n      playerPoint.push({\n        name:logs[i].loser1,\n        point: 0 - logs[i].loser1_point\n      })\n    }else{\n      playerPoint[players.indexOf(logs[i].loser1)].point -= logs[i].loser1_point;\n    }\n    point -= logs[i].loser1_point;\n    if(players.indexOf(logs[i].loser2)===-1){\n      players.push(logs[i].loser2);\n      playerPoint.push({\n        name:logs[i].loser2,\n        point: 0 - logs[i].loser2_point\n      })\n    }else{\n      playerPoint[players.indexOf(logs[i].loser2)].point -= logs[i].loser2_point;\n    }\n    point -= logs[i].loser2_point;\n    if(point !==0){\n      error.push(logs.timeStamp);\n    }\n  }\n  if(error.length !== 0){\n    alert(`${error.join()}의 포인트가 맞지 않습니다. 확인해주세요.`)\n  }\n  const heaven = playerPoint.filter((player)=>player.point>10).sort((a,b)=>b.point-a.point);\n  const kingdom = playerPoint.filter((player)=>11>player.point&&player.point>7).sort((a,b)=>b.point-a.point);\n  const noble = playerPoint.filter((player)=>8>player.point&&player.point>3).sort((a,b)=>b.point-a.point);\n  const normal = playerPoint.filter((player)=>4>player.point&&player.point>-1).sort((a,b)=>b.point-a.point);\n  const slave = playerPoint.filter((player)=>0>player.point&&player.point>-11).sort((a,b)=>b.point-a.point);\n  const deepSea = playerPoint.filter((player)=>-10>player.point&&player.point).sort((a,b)=>b.point-a.point);\n  return(\n  <>\n  <Nav state=\"checkPoint\"/>\n  <div className=\"test\" style={{margin:\"10px auto 30px\", maxHeight:\"450px\",overflow:\"scroll\"}}>\n    <StyledLayer color=\"rgba(242,184,7,0.3)\">\n      <li> - 천계 ( 11 ~ )</li>\n      {heaven.map((player,idx)=><li key={idx}>{player.name} {player.point} point</li>)}\n    </StyledLayer>\n    <StyledLayer color=\"rgba(9,115,104,0.3)\">\n      <li> - 왕족 ( 8 ~ 10 )</li>\n      {kingdom.map((player,idx)=><li key={idx}>{player.name} {player.point} point</li>)}\n    </StyledLayer>\n    <StyledLayer color=\"rgba(242,207,184,0.3)\">\n      <li> - 귀족 ( 4 ~ 7 )</li>\n      {noble.map((player,idx)=><li key={idx}>{player.name} {player.point} point</li>)}\n    </StyledLayer>\n    <StyledLayer color=\"rgba(217,79,48,0.3)\">\n      <li> - 평민 ( 0 ~ 3 )</li>\n      {normal.map((player,idx)=><li key={idx}>{player.name} {player.point} point</li>)}\n    </StyledLayer>\n    <StyledLayer color=\"rgba(242,153,169,0.3)\">\n      <li> - 노예 ( -1 ~ -10 )</li>\n      {slave.map((player,idx)=><li key={idx}>{player.name} {player.point} point</li>)}\n    </StyledLayer>\n    <StyledLayer color=\"rgba(5,20,125,0.3)\">\n      <li> - 심해 ( -11 ~ )</li>\n      {deepSea.map((player,idx)=><li key={idx}>{player.name} {player.point} point</li>)}\n    </StyledLayer>\n  </div>\n  </>);\n}\n\nexport default Checkpoint;","import Nav from \"../components/Nav\";\nimport { dbService } from \"../fbase\";\nimport styled from \"styled-components\";\nconst StyledLogUl = styled.ul`\n  margin: 30px auto;\n  list-style: none;\n  max-height: 450px;\n  overflow: scroll;\n  padding: 0;\n  li {\n    div {\n      display: inline-block;\n    }\n  }\n`;\nconst StyledTimeDiv = styled.div`\n  width: 50px;\n  height: 28px;\n  line-height: 28px;\n  font-size: 12px;\n`;\nconst StyledPlayerDiv = styled.div`\n  width: 50px;\n  font-size: 12px;\n  svg {\n    height: 13px;\n    cursor: pointer;\n  }\n`;\nconst CheckLog = ({ logs }) => {\n  return (\n    <>\n      <Nav state=\"viewlog\" />\n      <StyledLogUl>\n        <li>\n          <StyledTimeDiv>시간</StyledTimeDiv>\n          <StyledPlayerDiv>승리1</StyledPlayerDiv>\n          <StyledPlayerDiv>승리2</StyledPlayerDiv>\n          <StyledPlayerDiv>패배1</StyledPlayerDiv>\n          <StyledPlayerDiv>패배2</StyledPlayerDiv>\n          <StyledPlayerDiv>삭제</StyledPlayerDiv>\n        </li>\n        {logs &&\n          logs.map((log) => (\n            <li key={log.timeStamp}>\n              <StyledTimeDiv>{log.timeStamp}</StyledTimeDiv>\n              <StyledPlayerDiv>\n                {log.winner1}({log.winner1_point})\n              </StyledPlayerDiv>\n              <StyledPlayerDiv>\n                {log.winner2}({log.winner2_point})\n              </StyledPlayerDiv>\n              <StyledPlayerDiv>\n                {log.loser1}({log.loser1_point})\n              </StyledPlayerDiv>\n              <StyledPlayerDiv>\n                {log.loser2}({log.loser2_point})\n              </StyledPlayerDiv>\n              <StyledPlayerDiv\n                onClick={async () => {\n                  console.log(log.id);\n                  const year = new Date().getFullYear();\n                  const month = new Date().getMonth() + 1;\n                  const confirm = window.confirm(\n                    `시간 ${log.timeStamp}의 삭제가 맞나요?`,\n                  );\n                  const password =\n                    (confirm && prompt(\"티라미드 승패 삭제을 위한 비밀암호\")) ||\n                    null;\n                  if (password === \"민근\") {\n                    await dbService\n                      .collection(`playerList${year}${month}`)\n                      .doc(log.id)\n                      .delete();\n                    alert(\"삭제 완료!\");\n                  } else if (confirm) {\n                    alert(\"암호를 당장 알아오세요!\");\n                  }\n                }}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 352 512\">\n                  <path d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\" />\n                </svg>\n              </StyledPlayerDiv>\n            </li>\n          ))}\n      </StyledLogUl>\n    </>\n  );\n};\n\nexport default CheckLog;\n","import {BrowserRouter as Router, Switch, Redirect,Route} from 'react-router-dom';\nimport Putwin from '../route/PutWin';\nimport WinRatio from '../route/WinRatio';\nimport Checkpoint from '../route/CheckPoint';\nimport CheckLog from '../route/CheckLog';\n\n\nconst AppRoute = ({logs}) =>{\n\n  return(\n  <Router basename=\"/tiramid/pointcounter/build\">\n    <Switch>\n      <Route exact path=\"/input-win\">\n        <Putwin logs={logs}></Putwin>\n      </Route>    \n      <Route exact path=\"/win-ratio\">\n        <WinRatio logs={logs} ></WinRatio>\n      </Route>\n      <Route exact path=\"/check-point\">\n        <Checkpoint logs={logs} ></Checkpoint>\n      </Route>\n      <Route exact path=\"/view-log\">\n        <CheckLog logs={logs}></CheckLog>\n      </Route>\n      <Redirect from='*' to=\"/input-win\"/>\n    </Switch>\n  </Router>);\n}\n\nexport default AppRoute;","import styled from \"styled-components\";\nimport AppRoute from \"./Router\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { dbService } from \"../fbase\";\nconst StyledContainer = styled.div`\n  display: ${(props) => (props.display === \"true\" ? \"block;\" : \"none;\")}\n  z-index:100;\n  width: 500px;\n  position: absolute;\n  background:white;\n  top:50%;\n  left:50%;\n  transform:translate(-50%,-50%);\n  text-align:center;\n  @media (max-width: 768px) {\n    width:calc(100% - 20px);\n    left:10px;\n    transform:translate(0,-50%);\n  }\n`;\nconst StyledBtn = styled.button`\n  border: 0;\n  background: white;\n  position: absolute;\n  height: 20px;\n  top: 40px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 20px;\n  line-height: 0;\n  @media (max-width: 768px) {\n    top: 40px;\n  }\n`;\nfunction App() {\n  const [logs, setLogs] = useState([]);\n  // const month = 11;\n  useEffect(() => {\n    const year = new Date().getFullYear();\n    const month = new Date().getMonth() + 1;\n    dbService\n      .collection(`playerList${year}${month}`)\n      .onSnapshot(async (snapshot) => {\n        const logArr = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        await logArr.sort((a, b) => Number(b.timeStamp) - Number(a.timeStamp));\n        setLogs(logArr);\n      });\n  }, []);\n  const randomBg = useMemo(() => Math.floor(Math.random() * 15), []);\n  const [display, setDisplay] = useState(true);\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100vh\",\n        backgroundSize: \"cover\",\n        position: \"relative\",\n        backgroundPosition: \"center\",\n      }}\n      className={`img${randomBg}`}\n    >\n      <StyledContainer display={String(display)}>\n        <AppRoute logs={logs}></AppRoute>\n      </StyledContainer>\n      <StyledBtn\n        onClick={() => {\n          setDisplay((prev) => !prev);\n        }}\n      >\n        {display ? \"배경 관람\" : \"입력 돌아가기\"}\n      </StyledBtn>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nconst appVersion = \"1.5\";\n\nconsole.log(\"tiramid Counter v\" + appVersion);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}