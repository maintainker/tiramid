{"version":3,"sources":["fbase.js","components/Nav.js","route/PutWin.js","route/WinRatio.js","route/CheckPoint.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firedb","firestore","console","log","dbService","StyledNav","styled","ul","Nav","state","id","to","className","StyledResultBox","div","StyledPlayerBox","props","name","StyeldBtnAdd","button","StyeldResultBtn","StyledInput","input","StyledNavUl","StyledNavLi","li","Putwin","players","addPlayer","year","Date","getFullYear","month","getMonth","useState","newPlayer","setNewPlayer","winner","winPoint","loser","losePoint","results","setResults","onSubmit","a","result","doc","update","win","point","Number","lose","map","idx","onChange","e","target","value","player","newResults","String","style","marginTop","textAlign","onClick","pop","checkSum","i","answer","prompt","then","alert","margin","marginLeft","padding","height","window","confirm","WinRatio","checkPlayers","filter","check","sort","b","aRatio","position","Math","round","bottom","right","fontSize","StyledLayer","color","Checkpoint","heaven","kingdom","noble","normal","slave","deepSea","AppRoute","basename","exact","path","from","StyledContainer","display","StyledBtn","App","setPlayers","collection","add","useEffect","onSnapshot","snapshot","playerArr","docs","data","length","randomBg","useMemo","floor","random","setDisplay","width","backgroundSize","backgroundPosition","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e230db4.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n// import 'firebase/auth';\nimport 'firebase/firestore';\n// import 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGEIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst firedb  = firebase.firestore();\nconsole.log(firedb)\nconsole.log(firebase)\n\nexport const firebaseInstance = firebase;\n// export const authService = firebase.auth();\nexport const dbService =firedb;\n// export const storageService = firebase.storage();\n\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\nconst StyledNav = styled.ul`\nlist-style:none;\ntext-align:center;\npadding :10px 0;\nli{\n  display:inline-block;\n  width:calc((100% - 60px)/3);\n  height:40px;\n  margin-left:15px;\n  a{\n    display:block;\n    width:100%;\n    height:100%;\n    box-sizing:border-box;\n    line-height:40px;\n    color:black;\n    text-decoration:none;\n  }\n  a:hover{\n    border-bottom: 3px solid green;\n  } \n  a.on{\n    border-bottom: 3px solid green;\n  }\n}\nli:first-child{\n  margin:0;\n}\n`;\n\nconst Nav = ({state})=>{\n  return(\n    <StyledNav>\n      <li><Link id=\"win-ratio\" to=\"/win-ratio\"  className={state===\"winRatio\"? \"winRatio on\":\"winRatio\"} >승률 확인</Link></li>\n      <li><Link id=\"check-point\" to=\"/check-point\" className={state===\"checkPoint\"? \"checkPoint on\":\"checkPoint\"}>포인트 확인</Link></li>\n      <li><Link id=\"input-win\" to=\"/input-win\" className={state===\"putWin\"? \"putWin on\":\"putWin\"}>승패 입력</Link></li>\n    </StyledNav>\n    )\n}\n\nexport default Nav;","import {  useState } from \"react\";\nimport {dbService} from \"../fbase\";\nimport styled from \"styled-components\";\nimport Nav from \"../components/Nav\";\nconst StyledResultBox = styled.div`\n  text-align:center;\n  margin-top:20px;\n`;\nconst StyledPlayerBox = styled.div`\n  display:inline-block;\n  margin-right:${props=>props.name===\"winner\"? \"20px;\":\"0;\"}\n  select{\n    margin-right:15px;\n    height:23px;\n  }\n  @media (max-width: 768px) {\n    width:calc((80% - 20px)/2);\n    select{\n      width:80px;\n    }\n  }\n  @media (max-width: 368px) {\n    select{\n      width:50px;\n      font-size:10px;\n    }\n  }\n`;\nconst StyeldBtnAdd = styled.button`\n  margin-right:${props=> props.state === \"add\"? \"20px\":\"0\"};\n  width:200px; \n  height:50px;\n  @media (max-width: 768px) {\n    width:calc((80% - 20px)/2);\n  }\n`;\nconst StyeldResultBtn = styled.button`\n  width: 420px;\n  height: 50px;\n  margin-top: 20px;\n  @media (max-width: 768px) {\n    width:80%;\n  }\n\n`;\nconst StyledInput = styled.input`\n  width: ${props=>props.name===\"player\"?\"200px\":\"100px\"};\n  height:24px;\n  text-align:right;\n  box-sizing:border-box;\n  padding:2px;\n  border:0;\n  border-bottom:1px solid #aaa;\n  @media (max-width: 768px) {\n    width:${props=>props.name===\"player\"?\"33%\":\"20%\"};\n  }\n`;\nconst StyledNavUl = styled.ul`\n  text-align: center;\n  list-style: none;\n  font-size: 28px;\n  margin-top: 20px;\n`;\nconst StyledNavLi = styled.li`\n  margin-right: ${props=>props.name===\"winner\"? \"20px\":\"0\"};\n  display: inline-block;\n  width: 200px;\n  @media (max-width: 768px) {\n    width:calc((80% - 20px)/2);\n  }\n`\nconst Putwin = ({players,addPlayer}) =>{\n  const year = (new Date()).getFullYear();\n  const month = (new Date()).getMonth();\n  console.log(year,month)\n  const [newPlayer,setNewPlayer] = useState(\"\");\n  const [results,setResults] = useState([{\n    winner:\"0\",\n    winPoint :\"0\",\n    loser:\"0\",\n    losePoint:\"0\"\n  },{\n    winner:\"0\",\n    winPoint :\"0\",\n    loser:\"0\",\n    losePoint:\"0\"\n  }])\n  const onClick = ()=>{\n    if(window.confirm(`이름이 ${newPlayer}이(가) 맞습니까? 한번 추가하면 제거할수 없습니다.`)){\n      addPlayer({\n        name:newPlayer,\n        win:0,\n        lose:0,\n        point:0\n      }).then(\n        alert(\"추가되었습니다.\")\n      )\n      setNewPlayer(\"\")\n    }\n  }\n  \n  const onSubmit =async (results)=>{\n    for(let result of results){\n    await dbService.doc(`playerList${year}${month}/${players[result.winner].id}`).update({\n        win: players[result.winner].win + 1,\n        point: players[result.winner].point + Number(result.winPoint)\n    })\n    await dbService.doc(`playerList${year}${month}/${players[result.loser].id}`).update({\n      lose: players[result.loser].lose + 1,\n      point: players[result.loser].point - Number(result.losePoint)\n    })}\n  }\n  return (\n  <>\n    <Nav state=\"putWin\"/>\n    <StyledNavUl>\n      <StyledNavLi name=\"winner\">승리</StyledNavLi>\n      <StyledNavLi name=\"loser\">패배</StyledNavLi>\n    </StyledNavUl>\n    {results.map((result,idx)=>(\n    <StyledResultBox key={idx}>\n      <StyledPlayerBox name=\"winner\" className=\"winner\">\n        <select onChange={(e)=>{\n          results[idx].winner=e.target.value;\n          }}>\n        {players.map((player,idx)=>(<option key={player.name} value={idx}>{player.name}</option>))}\n        </select>\n        <select onChange={(e)=>{\n          const newResults = [...results];\n          newResults[idx].winPoint=String(Number(e.target.value))\n          setResults(newResults);\n        }}>\n          <option value=\"0\">0</option>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n        </select>\n      </StyledPlayerBox>\n      <StyledPlayerBox name=\"loser\" className=\"loser\">\n        <select onChange={(e)=>{\n          results[idx].loser=e.target.value;\n          }}>\n        {players.map((player,idx)=>(<option key={player.name} value={idx}>{player.name}</option>))}\n        </select>\n        <select onChange={(e)=>{\n          const newResults = [...results];\n          newResults[idx].losePoint=String(Number(e.target.value))\n          setResults(newResults);\n        }}>\n          <option value=\"0\">0</option>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n        </select>\n      </StyledPlayerBox>\n    </StyledResultBox>))}\n    <div style={{marginTop:\"20px\", textAlign:\"center\"}}>\n      <StyeldBtnAdd state=\"add\" onClick={()=>{\n        const newResults = [...results,{\n          winner:\"\",\n          winPoint :\"0\",\n          loser:\"\",\n          losePoint:\"0\"\n        }];\n        setResults(newResults);\n      }}>결과 추가</StyeldBtnAdd>\n      <StyeldBtnAdd onClick={()=>{\n        const newResults = [...results];\n        newResults.pop();\n        setResults(newResults);\n      }}>결과 제거</StyeldBtnAdd>\n    </div>\n    <StyeldResultBtn\n      onClick={()=>{\n        let checkSum = 0;\n        for(let i in results){\n           checkSum += Number(results[i].winPoint) - Number(results[i].losePoint);\n        }\n        const answer = prompt(\"티라미드 승패 입력을 위한 비밀암호\")\n        if(checkSum===0 && answer === \"태진\"){\n          onSubmit(results).then(()=>{\n            alert(\"입력완료!\")\n            setResults([{\n              winner:\"0\",\n              winPoint :\"0\",\n              loser:\"0\",\n              losePoint:\"0\"\n            },{\n              winner:\"0\",\n              winPoint :\"0\",\n              loser:\"0\",\n              losePoint:\"0\"\n            }]);\n          })\n        }else if(checkSum !== 0){\n          alert(\"합계가 맞지 않습니다!\")\n        }else{\n          alert(\"암호를 당장 알아오세요!\")\n        }\n    }}>결과 입력하기</StyeldResultBtn>\n    <div style={{margin:\"20px 0\"}}>\n      <StyledInput name=\"player\" value={newPlayer} onChange={(e)=>setNewPlayer(e.target.value)}/>\n      <button style={{marginLeft:\"20px\",padding:\"3px\",height:\"24px\"}} onClick={onClick}>플레이어 추가</button>\n    </div>\n  </>)\n}\n\nexport default Putwin;","import Nav from \"../components/Nav\";\n\nconst WinRatio =({players}) =>{\n\n  const checkPlayers = players.filter((player)=>{\n    let check = true;\n    if(player.name===\"티라미드\" || player.win+player.lose <5){\n      check = false;\n    }\n    return check;\n  })\n  checkPlayers.sort((a,b)=>{\n    const aRatio = a.win/(a.win+a.lose);\n    const bRatio = b.win/(b.win+b.lose);\n    return bRatio-aRatio\n  })\n  return(\n  <>\n    <Nav state=\"winRatio\"/>\n    <div style={{padding:\"30px 0\",position:\"relative\"}}>\n    {checkPlayers.map((player,idx)=>\n    <div key={idx} style={{padding:\"8px\"}}>\n      <span>{idx+1}위 {player.name} 승률 : {Math.round((player.win/(player.win+player.lose))*10000)/100} % , win : {player.win}, lose : {player.lose}</span>\n    </div>)}\n    <span style={{\n    position: \"absolute\",\n    bottom: \"3px\",\n    right: \"0\",\n    fontSize: \"5px\"}}>* 합계 5판 이상만 집계됩니다. player에 이름이 있지만 여기에 이름이 없다면 경기수가 5판이 되지 않습니다.</span>\n    </div>\n  </>);\n}\n\nexport default WinRatio;","import styled from 'styled-components';\nimport Nav from '../components/Nav';\n\nconst StyledLayer = styled.ul`\n  list-style:none;\n  margin :0 40px;\n  padding:10px 40px;\n  background:${props=>props.color};\n  margin-bottom:${props=>props.position===\"last\"? \"20px\":\"0\"};\n  margin-top:${props=>props.position===\"first\"? \"20px\":\"0\"};\n  li{\n    text-align:left;\n    font-size :13px;\n    margin:4px;\n  }\n`;\n\nconst Checkpoint = ({players}) =>{\n  const heaven = players.filter((player)=>player.point>10).sort((a,b)=>b.point-a.point);\n  const kingdom = players.filter((player)=>11>player.point&&player.point>7).sort((a,b)=>b.point-a.point);\n  const noble = players.filter((player)=>8>player.point&&player.point>3).sort((a,b)=>b.point-a.point);\n  const normal = players.filter((player)=>4>player.point&&player.point>-1).sort((a,b)=>b.point-a.point);\n  const slave = players.filter((player)=>0>player.point&&player.point>-11).sort((a,b)=>b.point-a.point);\n  const deepSea = players.filter((player)=>-10>player.point&&player.point).sort((a,b)=>b.point-a.point);\n  return(\n  <>\n  <Nav state=\"checkPoint\"/>\n  <StyledLayer color=\"rgba(242,184,7,0.3)\" position=\"first\">\n    <li> - 천계 ( 11 ~ )</li>\n    {heaven.map((player)=><li key={player.name}>{player.name} {player.point} point</li>)}\n  </StyledLayer>\n  <StyledLayer color=\"rgba(9,115,104,0.3)\">\n    <li> - 왕족 ( 8 ~ 10 )</li>\n    {kingdom.map((player)=><li key={player.name}>{player.name} {player.point} point</li>)}\n  </StyledLayer>\n  <StyledLayer color=\"rgba(242,207,184,0.3)\">\n    <li> - 귀족 ( 4 ~ 7 )</li>\n    {noble.map((player)=><li key={player.name}>{player.name} {player.point} point</li>)}\n  </StyledLayer>\n  <StyledLayer color=\"rgba(217,79,48,0.3)\">\n    <li> - 평민 ( 0 ~ 3 )</li>\n    {normal.map((player)=><li key={player.name}>{player.name} {player.point} point</li>)}\n  </StyledLayer>\n  <StyledLayer color=\"rgba(242,153,169,0.3)\">\n    <li> - 노예 ( -1 ~ -10 )</li>\n    {slave.map((player)=><li key={player.name}>{player.name} {player.point} point</li>)}\n  </StyledLayer>\n  <StyledLayer color=\"rgba(5,20,125,0.3)\" position=\"last\">\n    <li> - 심해 ( -11 ~ )</li>\n    {deepSea.map((player)=><li key={player.name}>{player.name} {player.point} point</li>)}\n  </StyledLayer>\n  </>);\n}\n\nexport default Checkpoint;","import {BrowserRouter as Router, Switch, Redirect,Route} from 'react-router-dom';\nimport Putwin from '../route/PutWin';\nimport WinRatio from '../route/WinRatio';\nimport Checkpoint from '../route/CheckPoint';\n\n\nconst AppRoute = ({players,addPlayer}) =>{\n  return(\n  <Router basename=\"/tiramid/pointcounter/build\">\n    <Switch>\n      <Route exact path=\"/input-win\">\n        <Putwin players={players} addPlayer={addPlayer}></Putwin>\n      </Route>    \n      <Route exact path=\"/win-ratio\">\n        <WinRatio players={players} ></WinRatio>\n      </Route>\n      <Route exact path=\"/check-point\">\n        <Checkpoint players={players} ></Checkpoint>\n      </Route>\n      <Redirect from='*' to=\"/input-win\"/>\n    </Switch>\n  </Router>);\n}\n\nexport default AppRoute;","import styled from \"styled-components\";\nimport AppRoute from \"./Router\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport {dbService} from \"../fbase\";  \nconst StyledContainer = styled.div`\n  display: ${(props)=>props.display===\"true\"? \"block;\":\"none;\"}\n  z-index:100;\n  width: 500px;\n  position: absolute;\n  background:white;\n  top:50%;\n  left:50%;\n  transform:translate(-50%,-50%);\n  text-align:center;\n  @media (max-width: 768px) {\n    width:calc(100% - 20px);\n    left:10px;\n    transform:translate(0,-50%);\n  }\n`;\nconst StyledBtn = styled.button`\n  border: 0;\n  background: white;\n  position:absolute;\n  height:20px;\n  top:40px;\n  left:50%;\n  transform:translateX(-50%);\n  padding:20px;\n  line-height:0;\n  @media (max-width: 768px) {\n    top:40px;\n  }\n  \n`;\nfunction App() {\n  const [players,setPlayers] = useState([]);\n  const year = (new Date()).getFullYear();\n  const month = (new Date()).getMonth();\n  const addPlayer = async (player) =>{\n    let check = true;\n    for(let i in players){\n      if(players[i].name === player.name){\n        check = false\n      }\n    }\n    if(check){\n      await dbService.collection(`playerList${year}${month}`).add(player);\n    }else{\n      alert(\"중복된 이름이 있습니다.\")\n    }\n  }\n  useEffect(()=>{\n    dbService.collection(`playerList${year}${month}`).onSnapshot((snapshot)=>{\n      const playerArr = snapshot.docs.map(doc=>{\n        return({id:doc.id,...doc.data()})})\n      if(playerArr.length === 0 ){\n        addPlayer({\n          name:\"티라미드\",\n          win:0,\n          lose:0,\n          point:0\n        });\n      }\n      setPlayers(playerArr);\n    })\n  },[])\n  const randomBg = useMemo(()=> Math.floor(Math.random()*10),[]);\n  const [display,setDisplay] =useState(true);\n  return (\n    <div style={{\n      width: \"100%\",\n      height: \"100vh\",\n      backgroundSize:\"cover\",\n      position: \"relative\",\n      backgroundPosition: \"center\"}} className={`img${randomBg}`}>\n      <StyledContainer display={String(display)}>\n        <AppRoute players={players} addPlayer={addPlayer}></AppRoute>\n      </StyledContainer>\n      <StyledBtn onClick={()=>{setDisplay((prev)=>!prev)}}>{display? \"배경 관람\":\"입력 돌아가기\"}</StyledBtn>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}